# Conversion from float to double 
# IEEE 754 compliant

[require]
GLSL >= 1.30

[vertex shader]
#version 130
void main()
{
   gl_Position = gl_Vertex;
}

[fragment shader]
#version 130
void main()
{
   gl_FragColor = gl_Color;
}

[test]

/************************************************
* Convert Float32 to Float64:
* Extract Float32 Sign, Exp and Frac
* Assign it to the Float64
************************************************/

uvec2
packFloat64( in uint Sign, in uint Exp, in uint Frac ) {
   return uvec2( (Sign | (Exp << 23) | (Frac >> 10) ), (Frac << 19) );
}

uint
extractFloat32Frac( in float a ) {
  return a & 0x007FFFFF;
}

uint
extractFloat32Exp( in float a ) {
   return (a>>23) & 0xFF;
}

uint
extractFloat32Sign( in float a ) {
   return a & 0x80000000;
}

uvec2
float32_to_float64( in float a ) {
   uint rightPart;
   uint Frac;
   uint Exp;
   uint Sign;

   Frac = extractFloat32Frac( a );
   Exp = extractFloat32Exp( a );
   Sign = extractFloat32Sign( a );
   
   if(Exp == 0xFF) {
      if( Frac ) {
         /* NaN */
         return uvec2( (Sign | 0x7FF00000 | (Frac >> 10)), (Frac << 19) );
      }
      /* Inf */
      return uvec2( (Sign | 0x7FF00000), 0 );
   }

   if( Exp == 0 ) {
      if( Frac ) {
         /* Denormals */
         return packFloat64(0, 0, Frac);
      }
   /* Zero */
   return packFloat64(Sign, 0, 0);
   }

   return packFloat64(Sign, Exp, Frac);
}
